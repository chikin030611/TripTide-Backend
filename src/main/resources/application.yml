spring:
  application:
    name: ${APP_NAME:triptide-backend}

  config:
    import: optional:file:.env[.properties]

  datasource:
    driver-class-name: org.postgresql.Driver

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}

---
spring:
  config:
    activate:
      on-profile: staging
  datasource:
    url: jdbc:postgresql:///${DB_NAME}?cloudSqlInstance=${PROJECT}:${REGION}:${INSTANCE_NAME}&socketFactory=com.google.cloud.sql.postgres.SocketFactory
    username: ${DB_USER}
    password: ${DB_PASS}
  jpa:
    hibernate:
      ddl-auto: update
      
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql:///${DB_NAME}?cloudSqlInstance=${PROJECT}:${REGION}:${INSTANCE_NAME}&socketFactory=com.google.cloud.sql.postgres.SocketFactory
    username: ${DB_USER}
    password: ${DB_PASS}


---
# Common configuration for all profiles
spring:
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: false

server:
  port: ${PORT:8080}
  address: 0.0.0.0
  error:
    include-message: always

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:3600000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}

frontend:
  url: ${FRONTEND_URL:http://localhost:3000}
